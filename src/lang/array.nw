<<array.c>>=
#include "array.h"

#include <stdio.h>
#include <stdlib.h>
#include <string.h>

void array_puts(const int a[], int length) {
  if (length == 0)
    return;
  printf("{ ");
  int i;
  for (i = 0; i < (length - 1); i++)
    printf("%d, ", a[i]);
  printf("%d }\n", a[length - 1]);
}

int *array_copy(const int a[], int length) {
  int *copy = malloc(length * sizeof(int));
  memcpy(copy, a, length * sizeof(int));
  return copy;
}
@
<<array.h>>=
#ifndef ARRAY_H
#define ARRAY_H

/**
 * Gets the size of a static array, must be > 0.
 */
#define array_size(a) (sizeof((a)) / sizeof((a)[0]))

/**
 * Writes the specified array to stdout.
 *
 * @param a the array to write.
 * @param length the length of the array.
 */
void array_puts(const int a[], int length);

/**
 * Creates a new copy of the specified array.
 *
 * @param a the array to copy.
 * @param length the length of the array.
 * @return a copy of the array a.
 */
int *array_copy(const int a[], int length);

#endif /* ARRAY_H */
@
